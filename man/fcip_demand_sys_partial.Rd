% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcip_demand_sys_estimate.R
\name{fcip_demand_sys_partial}
\alias{fcip_demand_sys_partial}
\title{Residualize ("partial out") and build tilded / instrument variables}
\usage{
fcip_demand_sys_partial(data, fields, partial_override = NULL)
}
\arguments{
\item{data}{A \code{data.frame}/\code{data.table} with referenced variables.}

\item{fields}{List with: \code{outcome}, \code{endogenous}, \code{included},
optional \code{excluded}, optional \code{partial}.}

\item{partial_override}{Optional character vector to override \code{fields$partial}.}
}
\value{
List with \code{data}, \code{tilda_included}, \code{tilda_endogenous},
\code{tilda_excluded}.
}
\description{
If excluded instruments exist, runs first-stage OLS for each endogenous
variable \code{e}: \code{e ~ 1 + partial + included + excluded}, storing the
fitted values as \code{instr_e}. If \code{partial} is non-empty, it then
regresses \code{instr_e ~ 1 + partial} and replaces
\code{instr_e <- instr_e - fitted(instr_e ~ partial)} (i.e., removes the
partial component; conceptually \eqn{\widehat{\mathrm{instr}}_e(\text{partial})}).

Outcomes, included, and endogenous variables are residualized on
\code{partial} to create \code{tilda_<var>} (or copied if \code{partial} is empty).
}
\details{
Uses defensive checks so absent columns are ignored (with a warning) rather than erroring.
If \code{partial} is empty, residualization is a no-op and \code{tilda_*} simply copy
the originals. Formulas are constructed via \code{stats::reformulate()} to avoid
paste/quoting pitfalls.
}
